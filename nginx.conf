server {
    listen 80;
    server_name localhost;
    root /usr/share/nginx/html;
    index index.html;

    # Include MIME types
    include /etc/nginx/mime.types;
    
    # Ensure proper MIME type for JavaScript modules
    location ~ \.mjs$ {
        add_header Content-Type "text/javascript";
    }

    # Enable gzip compression for better performance
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_comp_level 6;
    gzip_proxied any;
    gzip_types 
        text/plain 
        text/css 
        text/xml 
        text/javascript 
        application/javascript 
        application/json 
        application/xml+rss 
        application/atom+xml
        application/rss+xml
        application/xhtml+xml
        font/truetype
        font/opentype
        application/vnd.ms-fontobject
        image/svg+xml;

    # Security headers (enhanced)
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;

    # OG Images with proper caching
    location /og/ {
        expires 7d;
        add_header Cache-Control "public, no-transform";
        access_log off;
        try_files $uri $uri.png =404;
    }

    # Sitemap with proper headers
    location = /sitemap.xml {
        expires 1d;
        add_header Cache-Control "public, must-revalidate";
        add_header Content-Type "application/xml";
    }

    # robots.txt with proper headers
    location = /robots.txt {
        expires 1d;
        add_header Cache-Control "public, must-revalidate";
        add_header Content-Type "text/plain";
        access_log off;
        try_files $uri =404;
    }

    # JavaScript modules with proper MIME type
    location ~* \.m?js$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header Content-Type "text/javascript";
        access_log off;
    }

    # CSS files
    location ~* \.css$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header Content-Type "text/css";
        access_log off;
    }

    # Other static assets
    location ~* \.(png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot|webp)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        access_log off;
    }

    # Serve .md files directly for AI context and tools
    location ~ \.md$ {
        expires 1h;
        add_header Cache-Control "public, must-revalidate";
        add_header Content-Type "text/markdown";
        try_files $uri =404;
    }

    # Clean URLs with .html fallback for VitePress
    location / {
        # Try clean URL first, then .html, then 404
        try_files $uri $uri.html $uri/ =404;
        
        # Add cache control for HTML files
        location ~* \.html$ {
            expires 1h;
            add_header Cache-Control "public, must-revalidate";
        }
    }

    # Deny access to sensitive files
    location ~ /\.(git|env|DS_Store) {
        deny all;
        access_log off;
        log_not_found off;
    }

    # Custom 404 page
    error_page 404 /404.html;
}