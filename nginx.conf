<%
if (s.forceSsl) {
%>
    server {
        listen       80;
        server_name  <%-s.publicDomain%>;

        # Used by Lets Encrypt
        location /.well-known/acme-challenge/ {
            root <%-s.staticWebRoot%>;
        }

        # Used by CapRover for health check
        location /.well-known/captain-identifier {
            root <%-s.staticWebRoot%>;
        }
        
        location / {
            return 302 https://$http_host$request_uri;
        }
    }
<%
}
%>

server {
    <%
    if (!s.forceSsl) {
    %>
        listen       80;
    <%
    }
    if (s.hasSsl) {
    %>
        listen              443 ssl http2;
        ssl_certificate     <%-s.crtPath%>;
        ssl_certificate_key <%-s.keyPath%>;
    <%
    }
    %>

    server_name  <%-s.publicDomain%>;
    root <%-s.staticWebRoot%>;
    index index.html index;

    # VitePress clean URLs - handle extensionless files as HTML
    location / {
        try_files $uri $uri.html $uri/index.html $uri/index =404;
        
        # Set Content-Type for extensionless files
        location ~* ^/[^.]*$ {
            add_header Content-Type "text/html; charset=utf-8";
        }
    }

    # Static assets with proper MIME types
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot|webp)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
    }
    
    # XML and text files
    location ~* \.(xml|txt)$ {
        expires 1d;
        add_header Cache-Control "public, must-revalidate";
    }

    # Used by Lets Encrypt
    location /.well-known/acme-challenge/ {
        root <%-s.staticWebRoot%>;
    }
    
    # Used by CapRover for health check
    location /.well-known/captain-identifier {
        root <%-s.staticWebRoot%>;
    }

    error_page 404 /404.html;
}