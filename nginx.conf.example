# Base Framework Documentation - Nginx Configuration
# Supports clean URLs with .md fallback and SEO optimization

server {
    listen 80;
    listen [::]:80;
    server_name base.al www.base.al;
    
    # Redirect HTTP to HTTPS
    return 301 https://$server_name$request_uri;
}

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name base.al www.base.al;
    
    # SSL configuration (replace with your certificates)
    ssl_certificate /path/to/certificate.crt;
    ssl_certificate_key /path/to/private.key;
    
    # Security headers
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";
    add_header Referrer-Policy "strict-origin-when-cross-origin";
    
    # Document root
    root /var/www/base-docs/dist;
    index index.html;
    
    # Enable gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types text/plain text/css text/xml text/javascript application/javascript application/json;
    
    # Cache static assets
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf)$ {
        expires 1y;
        add_header Cache-Control "public, no-transform";
        access_log off;
    }
    
    # OG Images cache
    location /og/ {
        expires 7d;
        add_header Cache-Control "public, no-transform";
        access_log off;
        try_files $uri $uri.png =404;
    }
    
    # Clean URLs with .md fallback support
    location / {
        # Try exact match first
        try_files $uri $uri.html =404;
    }
    
    # Handle .md requests - redirect to clean URL
    location ~ \.md$ {
        return 301 $scheme://$host$uri$is_args$args;
    }
    
    # Redirect trailing slash for directories
    location ~ ^(.*)/$$ {
        return 301 $scheme://$host$1;
    }
    
    # Security: deny access to sensitive files
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # Optional: Basic auth for staging
    # location / {
    #     auth_basic "Base Framework Docs";
    #     auth_basic_user_file /etc/nginx/.htpasswd;
    #     try_files $uri $uri.html =404;
    # }
    
    # Logging
    access_log /var/log/nginx/base-docs-access.log;
    error_log /var/log/nginx/base-docs-error.log;
}